<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="BoardDao">

	<select id="noticeSelectInMain"
		resultType="com.group.exam.board.vo.NoticeAdminVo">
		select * from (select ROWNUM, N.NOTICE_SEQ, N.NOTICE_TITLE,to_char(N.NOTICE_REG_DAY,'yy.mm.dd') notice_reg_day,
		A.ADMIN_NICKNAME
		from NOTICE N right join ADMIN A ON N.ADMIN_SEQ = 0
		order by NOTICE_REG_DAY desc)
		where ROWNUM between 0 and 2
	</select>
	<insert id="insertBoard" parameterType="boardVo">
		insert into BOARD
		(BOARD_SEQ, BOARD_TITLE, BOARD_CONTENT,BOARD_REG_DAY,
		MEMBER_SEQ,
		QUESTION_SEQ)values
		(B_SEQ.nextval, #{boardTitle}, #{boardContent},
		SYSDATE,
		(select MEMBER_SEQ from MEMBER where MEMBER_SEQ =
		#{memberSeq}), (select
		QUESTION_SEQ from QUESTION where QUESTION_SEQ=
		#{questionSeq}))
	</insert>
	
	<select id="currentBoardSeq" resultType="Long">
		select B_SEQ.currval from dual 
		
		<!--  SELECT  LAST_NUMBER-1
	 FROM    USER_SEQUENCES
	 WHERE  SEQUENCE_NAME = 'B_SEQ'-->

	</select>
	

	<update id="updateBoard" parameterType="HashMap">
		update BOARD set
		BOARD_TITLE = #{boardTitle}, BOARD_CONTENT = #{boardContent} where
		BOARD_SEQ =
		#{boardSeq}
	</update>

	<delete id="deleteBoardOne" parameterType="HashMap">
		delete from BOARD
		where BOARD_SEQ = #{boardSeq} and MEMBER_SEQ = #{memberSeq}
	</delete>



	<!-- 전체 게시글 -->
	<select id="boardlist"
		parameterType="com.group.exam.utils.Criteria"
		resultType="com.group.exam.board.command.BoardlistCommand">
	
<![CDATA[select *
from (select ROWNUM rn, B.BOARD_SEQ, B.BOARD_TITLE, to_char(B.BOARD_REG_DAY, 'yyyy.mm.dd') BOARD_REG_DAY,
B.BOARD_LIKE, B.BOARD_COUNT, M.MEMBER_NICKNAME, M.MEMBER_SEQ  
from MEMBER M right join BOARD B on M.MEMBER_SEQ = B.MEMBER_SEQ  order by board_seq desc)
where rn between #{rowStart} and #{rowEnd} ]]>
	</select>

	<!-- -->
	<select id="questionselect" parameterType="Integer"
		resultType="com.group.exam.board.command.QuestionAdayCommand">
		select question_content, question_seq from
		(select rownum AS
		ROWNUMBER, question_content, question_seq
		from question
		where
		question_status = 'T')q
		where q.ROWNUMBER = #{num}
	</select>

	<select id="getSequence" resultType="Integer">
		select num_seq.nextval from
		dual
	</select>

	<select id="currentSequence" resultType="Integer">
		select LAST_NUMBER-1
		FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'NUM_SEQ'
	</select>



	<!-- 내 게시글 모아보기 -->
	<select id="boardMylist" parameterType="HashMap"
		resultType="com.group.exam.board.command.BoardlistCommand">

		<![CDATA[
select *
from (select ROWNUM rn, B.BOARD_SEQ, 
B.BOARD_TITLE, to_char(B.BOARD_REG_DAY, 'yyyy.mm.dd') BOARD_REG_DAY, B.BOARD_LIKE, B.BOARD_COUNT, 
M.MEMBER_NICKNAME, M.MEMBER_SEQ 
from MEMBER M right join BOARD B on M.MEMBER_SEQ = B.MEMBER_SEQ 
where M.member_seq = #{memberSeq}  order by board_seq desc) where rn between #{rowStart} and #{rowEnd}
		]]>

	</select>

	<!-- 게시글 디테일 -->
	<select id="boardlistDetail" parameterType="Long"
		resultType="com.group.exam.board.command.BoardlistCommand">

		<![CDATA[select B.BOARD_SEQ, B.BOARD_TITLE, to_char(B.BOARD_REG_DAY, 'yyyy.mm.dd') BOARD_REG_DAY, B.BOARD_LIKE, B.BOARD_COUNT, M.MEMBER_NICKNAME, M.MEMBER_SEQ, B.BOARD_CONTENT
from MEMBER M right join BOARD B on M.MEMBER_SEQ = B.MEMBER_SEQ where B.BOARD_SEQ = #{boardSeq}]]>

	</select>

	<!-- 게시판 전체 글 수 -->
	<select id="boardlistCount" resultType="Integer">
		select count(*) from
		BOARD

	</select>

	<!-- 내가 쓴 글 수 -->
	<select id="boardMylistCount" parameterType="Long"
		resultType="Integer">
		select count(*) from
		BOARD where MEMBER_SEQ = #{memberSeq}

	</select>

	<!-- board 조회수 up -->
	<update id="boardCountup" parameterType="Long">
		update BOARD set
		BOARD_COUNT = BOARD_COUNT+1 where BOARD_SEQ = #{boardSeq}
	</update>


	<!-- 게시글 수에 따른 멤버 레벨 변경 -->
	<update id="memberLevelup" parameterType="HashMap">


		<if test="mytotal >= 10">
			update MEMBER set MEMBER_LEVEL = MEMBER_LEVEL+1 where
			MEMBER_SEQ = #{memberSeq}
			and #{memberLevel} = 0
		</if>

		<if test="mytotal >= 30">
			update MEMBER set MEMBER_LEVEL = MEMBER_LEVEL+1 where
			MEMBER_SEQ = #{memberSeq}
			and #{memberLevel} = 1
		</if>

		<if test="mytotal >=50">
			update MEMBER set MEMBER_LEVEL = MEMBER_LEVEL+1 where
			MEMBER_SEQ = #{memberSeq}
			and #{memberLevel} = 2
		</if>
	</update>

	<!-- 닉네임, 제목으로 검색 -->
	<select id="boardSearch" parameterType="HashMap"
		resultType="com.group.exam.board.command.BoardlistCommand">

		<if test='searchOption.equals("memberNickname")'>
		<![CDATA[
select *
from (select ROWNUM rn, B.BOARD_SEQ, 
B.BOARD_TITLE, to_char(B.BOARD_REG_DAY, 'yyyy.mm.dd') BOARD_REG_DAY, B.BOARD_LIKE, B.BOARD_COUNT, 
M.MEMBER_NICKNAME, M.MEMBER_SEQ 
from MEMBER M right join BOARD B on M.MEMBER_SEQ = B.MEMBER_SEQ 
where M.MEMBER_NICKNAME = #{searchWord}  order by board_seq desc) where rn between #{rowStart} and #{rowEnd}
		]]>
		</if>

		<if test='searchOption.equals("boardTitle")'>
		<![CDATA[select *
from (select ROWNUM rn, B.BOARD_SEQ, 
B.BOARD_TITLE, to_char(B.BOARD_REG_DAY, 'yyyy.mm.dd') BOARD_REG_DAY, B.BOARD_LIKE, B.BOARD_COUNT, 
M.MEMBER_NICKNAME, M.MEMBER_SEQ 
from MEMBER M right join BOARD B on M.MEMBER_SEQ = B.MEMBER_SEQ 
where B.BOARD_TITLE LIKE '%'||#{searchWord}||'%'  order by board_seq desc) where rn between #{rowStart} and #{rowEnd}
		]]>
		</if>
	</select>
	
		<!--서치 글 수 -->
	<select id="boardSearchCount" parameterType="HashMap" resultType="Integer">

		<if test='searchOption.equals("memberNickname")'>
			select count(*) from
			BOARD where MEMBER_SEQ = #{memberSeq}

		</if>

		<if test='searchOption.equals("boardTitle")'>
			select count(*) from BOARD where BOARD_TITLE LIKE
			'%'||#{searchWord}||'%'
		</if>
	</select>
	
		<!-- 오늘 날짜 게시글 검색 -->
		<select id="boardListTodayArticle" parameterType="com.group.exam.utils.Criteria"
		resultType="com.group.exam.board.command.BoardlistCommand">

		<![CDATA[
select *
from (select ROWNUM rn, B.BOARD_SEQ, 
B.BOARD_TITLE, to_char(B.BOARD_REG_DAY, 'yyyy.mm.dd') BOARD_REG_DAY, B.BOARD_LIKE, B.BOARD_COUNT, 
M.MEMBER_NICKNAME, M.MEMBER_SEQ 
from MEMBER M right join BOARD B on M.MEMBER_SEQ = B.MEMBER_SEQ 
where to_char(B.BOARD_REG_DAY, 'yyyy.mm.dd')= to_char(sysdate, 'yyyy.mm.dd')  order by board_seq desc) where rn between #{rowStart} and #{rowEnd}
		]]>
		</select>
	
	<select id="boardTodayCount" resultType="Integer">
		select count(*) from BOARD where to_char(BOARD_REG_DAY, 'yyyy.mm.dd')= to_char(sysdate, 'yyyy.mm.dd')
	</select>
	

</mapper>
